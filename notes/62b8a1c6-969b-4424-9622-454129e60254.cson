createdAt: "2021-03-27T10:43:39.326Z"
updatedAt: "2021-03-29T02:14:45.957Z"
type: "MARKDOWN_NOTE"
folder: "7b95254d4d023f3965f1"
title: "2. Processing Data"
tags: []
content: '''
  # 2. Processing Data
  
  
  ## One-hot encoding
  
   用pandas中的`get_dummies`函数来one-hot编码
   
   Hint: To drop a column, it's suggested that you use `one_hot_data`[.drop( )](https://pandas.pydata.org/pandas-docs/stable/generated/pandas.DataFrame.drop.html).
   
   ```python
   # 参考https://github.com/udacity/deep-learning-v2-pytorch.git ntro-neural-networks > student_admissions > StudentAdmissions.ipynb
   # TODO:  Make dummy variables for rank and concat existing columns
  one_hot_data = pd.concat([data,pd.get_dummies(data['rank'],prefix = 'rank')],axis = 1)
  
  # TODO: Drop the previous rank column
  one_hot_data = one_hot_data.drop(['rank'],axis=1)
  
  # Print the first 10 rows of our data
  one_hot_data[:10]
   ```
   
   ## Scaling the data
   
   
   ```python
   # 参考https://github.com/udacity/deep-learning-v2-pytorch.git ntro-neural-networks > student_admissions > StudentAdmissions.ipynb
  # Making a copy of our data
  processed_data = one_hot_data[:]
  
  # TODO: Scale the columns
  processed_data['gre'] = processed_data['gre']/800
  processed_data['gpa'] = processed_data['gpa']/4.0
  
  # Printing the first 10 rows of our procesed data
  processed_data[:10]
  
  ```
  
  ## Splitting the data into Training and Testing
  
  ```python
   # 参考https://github.com/udacity/deep-learning-v2-pytorch.git ntro-neural-networks > student_admissions > StudentAdmissions.ipynb
  sample = np.random.choice(processed_data.index, size=int(len(processed_data)*0.9), replace=False)
  train_data, test_data = processed_data.iloc[sample], processed_data.drop(sample)
  
  print("Number of training samples is", len(train_data))
  print("Number of testing samples is", len(test_data))
  print(train_data[:10])
  print(test_data[:10])
  
  ```
  
  ## Splitting the data into features and targets (labels)
   
  ```python
   # 参考https://github.com/udacity/deep-learning-v2-pytorch.git ntro-neural-networks > student_admissions > StudentAdmissions.ipynb
  features = train_data.drop('admit', axis=1)
  targets = train_data['admit']
  features_test = test_data.drop('admit', axis=1)
  targets_test = test_data['admit']
  
  print(features[:10])
  print(targets[:10])
  ```
   
'''
linesHighlighted: []
isStarred: false
isTrashed: false
