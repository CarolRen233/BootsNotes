createdAt: "2021-03-26T02:44:14.749Z"
updatedAt: "2021-03-31T03:21:40.737Z"
type: "MARKDOWN_NOTE"
folder: "7b95254d4d023f3965f1"
title: "Numpy 用法"
tags: []
content: '''
  # Numpy 用法
  [toc]
  
  ## arg运算
  
  `np.argmax(a)`求一个array最大值的下标；
  `np.argsort(a)`从小到大排序，返回索引值；
  `np.argwhere(y==1)`返回y向量中值为1的下标。
  
  ```python
  print (X[np.argwhere(y==1)]) # [[[5 6]]]
  ```
  
  ## FancyIndexing
  
  取向量中某位置的值
  
  `data[1]`或`data[1,:]`某一行
  `data[:,1]`某一列
  
  `a[1:]`或`a[0:2]`连续取某几行
  `a[:,0:2]`或`a[1:,2:]`连续取某几列
  
  `data[[0,2],[1]]`取行号为0，2和列号为1的元素
  
  ## 生成矩阵
  
  `np.array([1,2,3])`生成一维向量
  `np.array([[1,2],[3,4],[5,6]])`生成多维矩阵
  
  `np.zeros(10)`和`np.zeros((3,4))`生成全是0的向量和矩阵
  `np.ones(10)`和`np.ones((3,4))`生成全是1的向量和矩阵
  
  
  `np.full((3,5),121)`生成3行5列的值全是121的矩阵
  
  `np.arange(0,20,2)`生成前闭后开的步长为2的从0到20的向量
  
  `np.linspace(0,10,5)`生成前闭后闭的从0到10的五等分的向量
  
  `np.random.randint(0,10,10)`生成值介于0~10的长度为10的向量
  `np.random.randint(0,10,(3,5))`生成值介于0~10的3×5的矩阵
  `np.random.randint(10)`生成值介于0~1的长度为10的向量
  `np.random.randint((3,5))`生成值介于0~1的3×5的矩阵
  
  
  `np.random.seed(1)`如果不希望每次随机数字都不同，就seed里面填一个数字
  
  `np.random.normal(loc=0,scale=1,size=shape)`生成均值为0，方差为1，
  
  ## 随机取数字
  
  `numpy.random.choice(a, size=None, replace=True, p=None)`从a(只要是ndarray都可以，但必须是一维的)中随机抽取数字，并组成指定大小(size)的数组, replace:True表示可以取相同数字，False表示不可以取相同数字，数组p：与数组a相对应，表示取数组a中每个元素的概率，默认为选取每个元素的概率相同。
  
  ## 维度变化
  
  删除维度：
  
  `numpy.squeeze(a,axis = None)`从数组的形状中删除单维度条目，即把shape中为1的维度去掉，axis若未指定则删除所有单维度的条目。通常在深度学习画图的时候用，因为直接用数组进行画图可能显示为空
  
  
  
  
'''
linesHighlighted: []
isStarred: false
isTrashed: false
