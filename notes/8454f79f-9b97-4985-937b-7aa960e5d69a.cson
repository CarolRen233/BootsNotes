createdAt: "2020-03-07T10:14:14.439Z"
updatedAt: "2020-05-22T03:51:18.662Z"
type: "MARKDOWN_NOTE"
folder: "17ec6a2700afef60a17d"
title: "ADL Code README"
tags: []
content: '''
  # ADL Code README
  
  代码是对论文《Detecting Cancer Metastases on Gigapixel Pathology Images》的复现。代码原github链接:[GitHub - olahosa/adl_cancer_detection](https://github.com/olahosa/adl_cancer_detection)
  
  代码用的框架是keras，需要下载tensorflow和keras
  `conda install tensorflow-gpu==1.14.0`
  `conda install keras`
  
  1. 首先用PatchPlot.py生成patch
  2. 然后用save_npy.py生成训练用的数据，这里的数据保存为numpy格式
  3. 然后用main.py来训练并生成heatmap
  
  
  
  虽然adl的代码能够跑通，但是依然存在很多问题
  >- 训练，验证，和测试都只是挑选了一小部分的图片
  >- 训练的图片不包含normal的图片，只有tumor的图片（虽然tumor图片包含normal区域）
  >- 没有计算总体的FROC和准确率
  >- 没有针对每张图片进行分类
  
  ## Steps
  
  ### 1. 生成numpy格式的patch
  
  用服务器
  ~~~bash
  python PatchPlot2.py -tf /root/workspace/dataset/CAMELYON16/training/tumor/ -mf /root/workspace/dataset/CAMELYON16/train_mask/ -sf /root/workspace/output/inceptionv3/0330/train/train_patchlist/
  
  python save_npy.py  -tt test -tf /root/workspace/dataset/CAMELYON16/testing/images/ -mf /root/workspace/dataset/CAMELYON16/test_mask/ -sf /root/workspace/output/ADL/log/0319/
  
  python PatchPlot2.py  -tf /root/workspace/dataset/CAMELYON16/training/normal/ -mf /root/workspace/dataset/CAMELYON16/trainormal_mask/ -sf /root/workspace/output/inceptionv3/0330/train/train_patchlist/
  
  ~~~
  用云脑
  GPU:1 CPU:2 内存：80000 40000 
  ~~~bash
  source ~/.bashrc; conda activate adl; cd userhome/code/adl_cancer_detection-master; python save_npy.py -tt trainval -tf /userhome/dataset/CAMELYON16/training/normal/ -mf /userhome/dataset/trainormal_mask/ -sf /userhome/output/ADL/log/0319/
  
  source ~/.bashrc; conda activate torch10; cd userhome/code/adl_cancer_detection-master; python save_npy.py -tt test -tf /userhome/dataset/CAMELYON16/testing/images/ -mf /userhome/dataset/test_mask/ -sf /userhome/output/ADL/log/0319/
  
  
  ~~~
  
  ### 2. concate npy
  服务器
  ~~~
  python npy_concate.py -npyf /root/workspace/output/ADL/log/0319/ -sf /root/workspace/output/ADL/log/0319/all_npy/
  
  python npy_concate.py -npyf /root/workspace/output/ADL/log/0319/ -sf /root/workspace/output/ADL/log/0319/all_npy_normal/
  
  ~~~
  云脑
  ~~~
  python mian_small.py -npyf /userhome/output/ADL/log/0314/ -sf /userhome/code/adl_cancer_detection-master/testlog/
  ~~~
  
  ### 3. train
  
  服务器
  ~~~
  python train1.py -epoch 2 -npyf /root/workspace/output/ADL/log/0314/all_npy/ -sf /root/workspace/output/ADL/log/0314/train/
  ~~~
  
  
  
  ## 环境配置
  
  
  ### 0.镜像源设置
  
  ~~~
  conda config --add channels https://mirrors.ustc.edu.cn/anaconda/pkgs/main/
  conda config --add channels https://mirrors.ustc.edu.cn/anaconda/pkgs/free/
  conda config --add channels https://mirrors.ustc.edu.cn/anaconda/cloud/conda-forge/
  conda config --add channels https://mirrors.ustc.edu.cn/anaconda/cloud/msys2/
  conda config --add channels https://mirrors.ustc.edu.cn/anaconda/cloud/bioconda/
  conda config --add channels https://mirrors.ustc.edu.cn/anaconda/cloud/menpo/
  conda config --set show_channel_urls yes
  conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/
  conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/main/
  conda config --set show_channel_urls yes
  conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/pytorch/
  ~~~
  https://blog.csdn.net/qq_43237588/article/details/89183303
  
  
  
  
  ### 1. openslide/opencv
  apt-get install openslide-tools
  apt-get install python-openslide
  pip install openslide-python
  
  ``apt-get install python3-openslide``或者``pip install openslide-python``
  `pip install opencv-python`
  
  ### 2. 安装Boost C++库
  
  1. [boost网站](http://www.boost.org/)下载boost的安装包，假设版本为 boost_1_72_0.tar.gz
  
  2. 依次运行一下命令：
     ```bash
     tar zxvf boost_1_72_0.tar.gz
     cd boost_1_72_0
     ./bootstrap.sh --with-libraries=all --with-toolset=gcc
     ./b2 toolset=gcc
     ./b2 install --prefix=/usr
     ldconfig
     ```
     
  
  ### 3. ASAP环境搭建
  
  *为什么需要安装ASAP？*
  
  能够将XML文件转成对应的tif文件，用于预处理数据和进行分割任务时，能够减少代码难度
  
  下载网站：
  
  1. 在[网站](https://github.com/computationalpathologygroup/ASAP/releases)下载ASAP 选择对应版本，如ASAP-1.9-Linux-Ubuntu1604.deb
  2. 运行下面的命令
  ~~~bash
  apt-get update
  dpkg -i ASAP-1.9-Linux-Ubuntu1604.deb
  apt-get -f install
  dpkg -L asap # 检查安装路径
  ~~~
  3. 写入环境变量
  export PYTHONPATH="/opt/ASAP/bin":"${PYTHONPATH}"
  [Vim使用方法](https://www.runoob.com/linux/linux-vim.html) | 
  [使用Vim配置环境变量](https://www.jb51.net/article/159388.htm)
  
  
  ### 4. 其他
  
  **conda**
  
  ~~~
  conda install tensorflow-gpu=1.9.0
  conda install keras=2.2.0
  ~~~
  
  **pip**
  
  设清华镜像
  
  ~~~
  pip config set global.index-url https://pypi.tuna.tsinghua.edu.cn/simple
  ~~~
  
  安装tensorflow
  ~~~
  pip --default-timeout=100 install -U torchvision==0.4
  pip install numpy==1.16.0 
  ~~~
  
  ~~~
  pip install scikit-image
  pip install scikit-learn
  ~~~
  
  **报错**
  
  1.  ImportError: cannot import name 'Feature'
  降级setuptool，`pip install setuptools==19.2 `
  
'''
linesHighlighted: []
isStarred: false
isTrashed: false
